{"version":3,"sources":["reducers/actions.js","reducers/types.js","reducers/product-api.js","components/Search.js","components/Product.js","components/List.js","App.js","serviceWorker.js","reducers/product-reducer.js","reducers/index.js","index.js"],"names":["filterProduct","filter","dispatch","type","payload","fetchProduct","search","sortPrice","category","sort","fetch","headers","then","res","json","data","rows","getProducts","products","setProductsAction","useStyles","makeStyles","formInput","flexGrow","paper","padding","marginTop","marginBottom","connect","state","product","props","classes","onSearch","Paper","className","Grid","container","alignItems","justify","TextField","label","variant","disabled","onKeyDown","e","keyCode","value","onChange","ev","target","IconButton","color","onClick","Icon","theme","root","spacing","margin","maxWidth","image","width","height","img","display","maxHeight","Product","item","ButtonBase","alt","SpreeProductImages","alternative_text","src","thumbnail_image","xs","sm","direction","Typography","gutterBottom","name","SpreeStore","store_name","average_rating","moment","created_at","subtract","calendar","sell_price","formControl","minWidth","categories","id","useState","setSort","changeSelect","isLoading","CircularProgress","disableShrink","FormControl","InputLabel","Select","MenuItem","map","c","key","Tooltip","title","Slide","in","length","mountOnEnter","unmountOnExit","minHeight","background","overflow","App","md","List","Boolean","window","location","hostname","match","initialState","errMessage","productReducer","action","Object","assign","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.36def910.chunk.js","sourcesContent":["\nimport { FETCHING_PRODUCT , SET_PRODUCT , ERROR_PRODUCT , FILTER_PRODUCT } from './types'\nimport { getProducts  } from './product-api'\n\nconst setProductsAction = (products) => ({\n    type : SET_PRODUCT ,\n    payload : products\n})\n\nconst errProduct = (message) => ({\n    type : ERROR_PRODUCT ,\n    payload : message\n})\n\nexport const filterProduct = (filter) => (dispatch) => dispatch({\n    type : FILTER_PRODUCT ,\n    payload : filter\n})\n\n\nexport const fetchProduct = ({ search , sortPrice , category }) => (dispatch) => {    \n    dispatch({ type : FETCHING_PRODUCT })\n    getProducts(search , sortPrice , category)\n    .then( products => {\n        dispatch(setProductsAction(products))\n    })\n\n}\n","export const FETCHING_PRODUCT = 'FETCHING_PRODUCT'\nexport const SET_PRODUCT = 'SET_PRODUCT'\nexport const ERROR_PRODUCT = 'ERROR_PRODUCT'\nexport const FILTER_PRODUCT = 'FILTER_PRODUCT'","\n\nexport const getProducts = ( search = '', sort = 'lowestFirst', category = 0 ) => {\n    category = category > 0 ? `&subCategory=${category}` : ''\n    search = search !== '' ? `&search=${search}` : ''\n    sort = `?sort=${sort}`\n\n    return fetch(`https://apis.aspenku.com/api/v1/product${sort + search + category}`, {\n        headers: {\n          'Authorization' : 'Basic QXNwZW5rdTpBc3Blbmt1' \n        }\n      })\n      .then( res => res.json() )\n      .then(res => res.data.rows )\n}","import React , { useState } from 'react'\nimport { TextField, Paper, Grid, IconButton, Icon } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { fetchProduct , filterProduct } from '../reducers/actions'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(() => ({\n    formInput: {\n        flexGrow: 1\n    },\n    paper: {\n        padding: '10px',\n        marginTop: '20px',        \n        marginBottom: '20px'\n    }\n}));\n\n\nconst Search = (props) => {\n   \n    const classes = useStyles()\n\n    const onSearch = () => {        \n        props.fetchProduct(props.filter)\n    }\n\n    const onKeyPress = (e) => {\n        if (e.keyCode === 13) onSearch()\n    }\n \n    return (\n        <Paper className={classes.paper} >\n            <Grid container alignItems='center' justify='center' >\n                <TextField \n                    label=\"Search Products\" \n                    variant=\"outlined\" \n                    disabled={props.filter === ''}\n                    className={classes.formInput} onKeyDown={onKeyPress} \n                    value={props.filter.search} \n                    onChange={ ev => props.filterProduct({ ...props.filter , search : ev.target.value }) } />\n                &nbsp;\n                <IconButton color=\"primary\" onClick={onSearch}>\n                    <Icon>search</Icon>\n                </IconButton>\n            </Grid>\n        </Paper>)\n}\n\n\nconst mapState = (state) => ({ filter : state.product.filter })\n\nconst mapDispatch = (dispatch) => ({\n    fetchProduct : (filter) => dispatch(fetchProduct(filter)),\n    filterProduct : (filter) => dispatch(filterProduct(filter)) \n})\n\nexport default connect( mapState , mapDispatch ) (Search)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport moment from 'moment'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: '20px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nexport default function Product({ product }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <ButtonBase className={classes.image}>\n              <img className={classes.img} \n                alt={product.SpreeProductImages[0] && product.SpreeProductImages[0].alternative_text} \n                src={product.SpreeProductImages[0] && product.SpreeProductImages[0].thumbnail_image} />\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"subtitle1\">\n                  {product.name}\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                  { product.SpreeStore.store_name }\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  rate { product.average_rating } <br />\n                  created at { moment(product.created_at).subtract(6, 'days').calendar() }\n                </Typography>\n              </Grid>              \n            </Grid>\n            <Grid item>\n                <Typography variant=\"subtitle1\">${product.sell_price} </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}","import React, { useState, Fragment } from 'react'\nimport { Paper, List, ListItem, ListItemText, Divider, CircularProgress, Slide, MenuItem, Select, FormControl, InputLabel, Grid, IconButton, Icon, Tooltip } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport { filterProduct , fetchProduct } from '../reducers/actions';\nimport Product from './Product'\n\nconst useStyles = makeStyles(theme => ({\n    formInput: {\n        flexGrow: 1\n    },\n    paper: {\n        marginBottom: '20px'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    }\n}));\n\nconst categories = [\n    { id: 113, name: 'Spices' },\n    { id: 119, name: 'Seafood' },\n    { id: 140, name: 'Coffe Beans' },\n    { id: 141, name: 'Fruits' },\n    { id: 143, name: 'Vegetables' },\n    { id: 144, name: 'Tea' },\n]\n\nconst ListProduct = (props) => {\n    \n    const classes = useStyles()\n    const [ sort , setSort ] = useState(false)\n    const filter = props.filter\n\n    const changeSelect = (e) => {\n        props.filterProduct({ ...filter , category : e.target.value })\n        props.fetchProduct(props.filter)\n    }\n\n    const sortPrice = () => {\n        props.filterProduct({ ...filter , sortPrice : sort ? 'lowestFirst' : 'highestFirst' })\n        props.fetchProduct(props.filter)\n        setSort(!sort)\n    }\n\n    const renderFilter = () => {\n        return (\n            <Grid container alignItems='center' justify='flex-end' >\n                <FormControl className={classes.formControl}>\n                    <InputLabel >Category</InputLabel>\n                    <Select\n                        value={filter.category}\n                        onChange={changeSelect} >\n                        <MenuItem value={0}>\n                            <em>None</em>\n                        </MenuItem>\n                        {categories.map((c, key) => (\n                            <MenuItem value={c.id} key={key} >{c.name}</MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <Tooltip title='Sort price'>\n                    <IconButton color=\"primary\" onClick={sortPrice} >\n                        <Icon>sort</Icon>\n                    </IconButton>\n                </Tooltip>\n            </Grid>\n        )\n    }\n\n    return (<>\n        {props.isLoading ? <center><CircularProgress disableShrink /></center> :\n        <>\n            {renderFilter()}\n            <Slide direction=\"up\" in={props.products.length > 0} mountOnEnter unmountOnExit> \n                <div>\n                    \n                    { props.products.map((product, key) => \n                        <Product product={product} key={key} />\n                    ) }\n                    \n                </div>\n            </Slide>\n        </>\n\n        }\n    </>)\n}\n\nconst mapDispatch = (dispatch) => ({\n    fetchProduct : (filter) => dispatch(fetchProduct(filter)),\n    filterProduct : (filter) => dispatch(filterProduct(filter))\n})\n\nexport default connect((state) => state.product, mapDispatch)(ListProduct)\n","import React from 'react';\nimport { Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Search from './components/Search'\nimport List from './components/List'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    minHeight: '100vh',\n    background: 'linear-gradient(45deg, #c5ceff, #e6f0ffb8)',\n    overflow: 'auto'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles()\n\n  return (\n    <Grid container alignItems='center' justify='center' direction='column' className={classes.root} >\n      <Grid container alignItems='center' justify='center' >\n        <Grid item md={6} xs={11} >\n          <Search />\n        </Grid>\n      </Grid>\n      <Grid container alignItems='center' justify='center' >\n        <Grid item md={6} xs={11} >\n          <List />\n        </Grid>\n      </Grid>\n    </Grid>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport { FETCHING_PRODUCT , SET_PRODUCT , ERROR_PRODUCT , FILTER_PRODUCT } from './types'\n\nconst initialState = {\n    products : [] , \n    isLoading : false,\n    errMessage : null,\n    filter : {\n        search : '',\n        category : 0,\n        sortPrice : 'lowestFirst'\n    }    \n}\n\nconst productReducer = ( state = initialState , action) => {\n    switch(action.type) {\n        case FETCHING_PRODUCT : \n            return Object.assign({}, \n                state, \n                { isLoading : true , products : [] }\n            )\n        case SET_PRODUCT : \n            return Object.assign({},\n                state,\n                { products : action.payload , isLoading : false }\n            )\n        case FILTER_PRODUCT : \n            return Object.assign({},\n                state,\n                { filter :  { ...action.payload  } }\n            )\n        case ERROR_PRODUCT :\n            return Object.assign({},\n                state,\n                { errMessage : action.payload }\n            )\n        default : \n            return state\n    }\n}\n\nexport default productReducer\n","import { combineReducers } from 'redux'\nimport productReducer from './product-reducer'\n\nconst rootReducer = combineReducers({\n    product : productReducer\n  })\n  \n  export default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render( \n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}